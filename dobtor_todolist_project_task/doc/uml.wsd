@startuml
' skinparam monochrome true
' skinparam handwritten true
' skinparam packageFontColor red

package project {

    
    Class Task {
        + Project project_id
        + ProjectTaskType stage_id
    }

    abstract class AbstractTodolistCopy {
        {abstract} T copy()
        {abstract} bool map_todolist()
    }
    note left: In this Case T is Task

    Class Project {
        + Task[] task_ids 
    }

    Class project_task_type_rel {

    }

    Class ProjectTaskType {
        {abstract} dict default_get()
    }


}

package dobtor_todolist_project_task {
    Class project_project {
        + int sequence_state
        + ProjectTaskType stage_id
        + dict default_get()
        - void count_sequence()
        + void set_template()
        + void new_project()
        + record reset_project()
        + void reset_project()
        + void set_progress()
        + void copy()
    }

    Class DobtorTodoListCore {
        + string ref_model
    }

    Class project_task {
        + DobtorTodoListCore[] todolist_ids
        + bool Project_check
        + void map_todolist()
    }
} 

project_task --|> AbstractTodolistCopy
Task "*" --o "1" ProjectTaskType
Project "1" o-- "*" Task
Project "1" o-- "*" project_task_type_rel
project_task_type_rel "*" --o "1" ProjectTaskType
project_project -() Project
ProjectTaskType "1" o-- "*" project_project
project_task --() Task
project_task "1" o-- "*" DobtorTodoListCore
' ProjectTaskType <|- project_task
project_project --> project_task
project_task -> DobtorTodoListCore
@enduml